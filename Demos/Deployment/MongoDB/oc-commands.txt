Secrets

Creating a single-key secret
oc create secret generic my-single-secret --from-literal=key1=supersecret

Creating a multiple-key secret
oc create secret generic my-multiple-secret --from-literal=key1=supersecret --from-literal=key2=topsecret

Doing MongoDB by scratch:

Secrets
oc create secret generic mongo-root-password-secret --from-literal=MONGO_INITDB_ROOT_PASSWORD=forecastpassword
oc create secret generic mongo-non-root-password-secret --from-literal=MONGO_NON_ROOT_PASSWORD=forecastpassword

MONGODB_USER=forecastsuser 
MONGODB_PASSWORD=forecastpassword 
MONGODB_DATABASE=forecastdb

Persistent Volume Claims
oc apply -f .\mongo-persistent-volume-claim-config.yaml
oc apply -f .\mongo-persistent-volume-claim-data.yaml

Image
oc import-image mongo:latest --confirm

Configuration
oc apply -f .\mongo-deployment-config.json

Service
oc apply -f .\mongo-service.yaml

Using the Red Hat template for MongoDB:
oc process openshift//mongodb-persistent -p MONGODB_USER=forecastsuser -p MONGODB_PASSWORD=forecastpassword -p MONGODB_DATABASE=forecastdb -p MONGODB_ADMIN_PASSWORD=forecastpassword | oc create -f -

Environment Variables (for Data Seeder app and API app)

Data Seeder App
dotnet publish  -c Release /p:MicrosoftNETPlatformLibrary=Microsoft.NETCore.App
oc new-build --name=data-seeder dotnet:2.2 --binary=true
oc start-build data-seeder --from-dir=bin/Release/netcoreapp2.2/publish --follow
oc new-app data-seeder
oc set env dc/data-seeder MongoDbSettings__HostName=mongodb.workshop-demo.svc.cluster.local
oc set env dc/data-seeder --from secret/mongodb

API App
dotnet publish Perficient.OpenShift.Workshop.API.csproj -c Release /p:MicrosoftNETPlatformLibrary=Microsoft.NETCore.App
oc new-build --name=workshop-api dotnet:2.2 --binary=true
oc start-build workshop-api --from-dir=bin/Release/netcoreapp2.2/publish --follow
oc new-app workshop-api
oc set env dc/workshop-api MongoDbSettings__HostName=mongodb.workshop-demo.svc.cluster.local
oc set env dc/workshop-api --from secret/mongodb
 
Test the API in the Pod Terminal
curl http://workshop-api.workshop-demo.svc.cluster.local:8080/api/sampledata/WeatherForecasts